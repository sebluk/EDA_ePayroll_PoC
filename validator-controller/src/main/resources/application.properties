kafka.bootstrap.servers=kafka-cluster-kafka-bootstrap-route-kafka-cluster-project.apps.xnkpeyx0.canadacentral.aroapp.io:9092

# Configure the Kafka source (we read from it)
mp.messaging.incoming.validator-epayrolls.connector=smallrye-kafka
mp.messaging.incoming.validator-epayrolls.topic=input_epayrolls
#mp.messaging.incoming.validator-epayrolls.value.deserializer=org.acme.deserializers.EpayrollDeserializer
mp.messaging.incoming.validator-epayrolls.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.validator-epayrolls.health-readiness-enabled=false
mp.messaging.incoming.validator-epayrolls.group.id=validator-controller


mp.messaging.outgoing.output-valid-data.connector=smallrye-kafka
mp.messaging.outgoing.output-valid-data.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.output-valid-data.topic=epayrolls

mp.messaging.outgoing.output-error-data.connector=smallrye-kafka
mp.messaging.outgoing.output-error-data.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.output-error-data.topic=error-data

quarkus.tls.trust-all=true
# quarkus.rest-client."org.acme.services.ValidateSinService".url=https://restcountries.com/
ca.gc.cra.rcsc.eda_epayroll_poc.services.ValidateSinService/mp-rest/url = http://sin-validator-eda-epayroll-poc.apps.xnkpeyx0.canadacentral.aroapp.io/
ca.gc.cra.rcsc.eda_epayroll_poc.services.ValidateEpayrollService/mp-rest/url = http://epayroll-validator-eda-epayroll-poc.apps.xnkpeyx0.canadacentral.aroapp.io/
ca.gc.cra.rcsc.eda_epayroll_poc.services.ValidateBnService/mp-rest/url = http://bn-validator-eda-epayroll-poc.apps.xnkpeyx0.canadacentral.aroapp.io/

